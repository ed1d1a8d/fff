"""
Django settings for fff project.

Generated by "django-admin startproject" using Django 2.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "-tmthudtj3xsnib)l=)wp#eten3h2(^^2x#2-8wr!lw)%pm!nu"

# SECURITY WARNING: don"t run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    "127.0.0.1",
    "localhost",
    "mus.icu",

    # for dev and testing
    # to tunnel to this backend, run ssh -R fff:80:127.0.0.1:8000 serveo.net in a terminal
    # your local backend will then be available at http://fff.serveo.net
    "fff.serveo.net",
]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Django Extensions,
    'django_extensions',
    # Rest Framework
    "rest_framework",
    # Rest Auth
    "rest_framework.authtoken",
    "rest_auth",
    # Registration with rest_auth
    "django.contrib.sites",
    "allauth",
    "allauth.account",
    "rest_auth.registration",
    # fb oauth
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    # Friendship
    "friendship",
    # Push Notifications
    "fcm_django",
    # Our APIs
    "api",
]

SOCIALACCOUNT_PROVIDERS = {
    'facebook': {
        'METHOD':
        'oauth2',
        'SDK_URL':
        '//connect.facebook.net/{locale}/sdk.js',
        'SCOPE': ['email', 'public_profile', 'user_friends'],
        'AUTH_PARAMS': {
            'auth_type': 'reauthenticate'
        },
        'INIT_PARAMS': {
            'cookie': True
        },
        'FIELDS': [
            'id',
            'email',
            'name',
            'first_name',
            'last_name',
            'verified',
            'locale',
            'timezone',
            'link',
            'gender',
            'updated_time',
        ],
        'EXCHANGE_TOKEN':
        True,
        'LOCALE_FUNC':
        'path.to.callable',
        'VERIFIED_EMAIL':
        False,
        'VERSION':
        'v2.12',
    }
}

SOCIALACCOUNT_ADAPTER="api.adapters.FFFSocialAccountAdapter"

FCM_DJANGO_SETTINGS = {
    "FCM_SERVER_KEY":
    "AAAAFxX_95g:APA91bGx6CAY-VVJJ0WC7ochpI7woKHcn-NzDFukO1goJyn2DXnf3u_Kir_dlz7pKOvfKhlZkJdOLGcOxz7gKnEdlmF8vkJpFOj-3KF1LLfEicr39y8MGneLp5FRjZxXg3qFcM-5iJCZ",
    # true if you want to have only one active device per registered user at a time
    # default: False
    "ONE_DEVICE_PER_USER": False,
    # devices to which notifications cannot be sent,
    # are deleted upon receiving error response from FCM
    # default: False
    "DELETE_INACTIVE_DEVICES": True,
}

SITE_ID = 1

# Don"t actually send emails
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "fff.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

TEMPLATE_DIRS = (os.path.join(BASE_DIR, "templates"), )

WSGI_APPLICATION = "fff.wsgi.application"

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "fff-db",
        "USER": "fff",
        "PASSWORD": "foodfriendfinder",
        "HOST": "localhost",
        "PORT": "5432",
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_USER_MODEL = "api.User"

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME":
        "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME":
        "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME":
        "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME":
        "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ]
}
#if not DEBUG:
REST_FRAMEWORK["DEFAULT_AUTHENTICATION_CLASSES"] = [
    "rest_framework.authentication.TokenAuthentication",
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = "/static/"
STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"), )
STATIC_ROOT = os.path.join(BASE_DIR, "assets")
